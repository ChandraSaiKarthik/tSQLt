# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'vs2017-win2016'

schedules:
- cron: "0 6 * * *"
  displayName: Daily 3AM cleanup
  branches:
    include:
    - CITesting
  always: true

variables:
  GetResourceGroupsStatement: 'Get-AzResourceGroup -Tag @{Department="tSQLtCI"; Ephemeral="True"}'

steps:

- task: AzurePowerShell@5
  name: List_RGs_To_Be_Deleted
  inputs:
    azureSubscription: 'tSQLt CI Subscription(58c04a99-5b92-410c-9e41-10262f68ca80)'
    azurePowerShellVersion: 'LatestVersion'
    ScriptType: 'InlineScript'
    Inline: |
      Write-Host '-----------------------------'
      Write-Host 'List RGs to be deleted'
      Write-Host '-----------------------------'
      $RGTBD = @(Get-AzResourceGroup) | Where-Object {$_.Tags.Ephemeral -eq "True" -and $_.Tags.Department -eq "tSQLtCI"} 
      $RGTBD | ForEach-Object { 
        Write-Host $_.ResourceGroupName 
        Get-AzResource -ResourceGroup $_.ResourceGroupName |ForEach{Get-AzResourceLock -ResourceType $_.ResourceType -ResourceName $_.Name -ResourceGroupName $_.ResourceGroupName}
      }
      Write-Host '-----------------------------'
      Write-Host 'Sleeping for 15 seconds'
      #Start-Sleep -s 15
      Write-Host '-----------------------------'
      Write-Host 'Setting Variable'
      $SerializedListOfRGs=(ConvertTo-JSON -InputObject $RGTBD -AsArray)
      Write-Host 'Setting Variable2'
      Write-Host "##vso[task.setvariable variable=SerializedListOfRGs;isOutput=true]$SerializedListOfRGs"

- task: AzurePowerShell@5
  name: print_stuff
  inputs:
    azureSubscription: 'tSQLt CI Subscription(58c04a99-5b92-410c-9e41-10262f68ca80)'
    azurePowerShellVersion: 'LatestVersion'
    ScriptType: 'InlineScript'
    Inline: |
      $RGTBD = (ConvertFrom-JSON $(SerializedListOfRGs))
      $RGTBD | FT


- task: AzurePowerShell@5
  condition: false
  name: Delete_RGs
  inputs:
    azureSubscription: 'tSQLt CI Subscription(58c04a99-5b92-410c-9e41-10262f68ca80)'
    azurePowerShellVersion: 'LatestVersion'
    ScriptType: 'InlineScript'
    Inline: |
      Get-AzResourceGroup -Tag @{Department="tSQLtCI"; Ephemeral="True"} | ForEach-Object { 
          Write-Host "Deleting ResourceGroup:" $_.ResourceGroupName 
          Write-Host "Removing Locks"
          Get-AzResource -ResourceGroup $_.ResourceGroupName |ForEach{
            Get-AzResourceLock -ResourceType $_.ResourceType -ResourceName $_.Name -ResourceGroupName $_.ResourceGroupName|ForEach{
              Write-Host $_.ResourceType "->" $_.ResourceName
              $_ | Remove-AzResourceLock -Force 
            }
          }
          Write-Host "Removing RG";
          $_ | Remove-AzResourceGroup -Force 
          Write-Host "Done" 
      }
      #Start-Job -InputObject $_ -ScriptBlock { } 
      #Get-AzResourceGroup -Tag @{Department="tSQLtCI"; Ephemeral="True"} | ForEach-Object { $_ | Remove-AzResourceGroup -Force } 
