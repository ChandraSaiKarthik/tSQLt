# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- CITesting

pool:
  vmImage: 'vs2017-win2016'

steps:

#- task: AzureKeyVault@1
#  inputs:
#    azureSubscription: 'tSQLt CI Subscription(58c04a99-5b92-410c-9e41-10262f68ca80)'
#    KeyVaultName: 'tSQLtCIDevTestLab35738'
#    SecretsFilter: '*'

#b874bbd7-99a6-4e8a-b268-5543839da064  (service principal client id)

- task: AzureDevTestLabsCreateVM@3
  name: CreateVM
  condition: and(succeeded(), eq(variables['CreateNewVm'], '1'))
  inputs:
    azureSubscription: 'tSQLt CI Subscription(58c04a99-5b92-410c-9e41-10262f68ca80)'
    LabID: /subscriptions/58c04a99-5b92-410c-9e41-10262f68ca80/resourceGroups/tSQLtCI_DevTestLab_3_RG/providers/Microsoft.DevTestLab/labs/tSQLtCI_DevTestLab_3
    VirtualMachineName: '$(vmName)'
    TemplateFile: 'CI/CreateVMTemplate.json'
#    ParameterOverrides: '-newVMName ''$(vmName)'' -userName ''$(userName)'' -password (ConvertTo-SecureString -String ''$(password)'' -AsPlainText -Force)'
    ParameterOverrides: '-newVMName ''$(vmName)'' -userName ''$(userName)'' -password ''qTv3f9gduUFuc8BQTZUq4MEcFbY3(2H)'' '


##- task: AzureDevTestLabsCreateVM@3
##  inputs:
##    azureSubscription: 'tSQLt CI Subscription(58c04a99-5b92-410c-9e41-10262f68ca80)'
##    LabID: /subscriptions/58c04a99-5b92-410c-9e41-10262f68ca80/resourceGroups/tSQLtCI_DevTestLab_3_RG/providers/Microsoft.DevTestLab/labs/tSQLtCI_DevTestLab_3
##    VirtualMachineName: 'SQL2008SP3C'
##    TemplateFile: 'CI/CreateVMTemplate.json'
###    ParameterOverrides: '-newVMName ''$(vmName)'' -userName ''$(userName)'' -password (ConvertTo-SecureString -String ''$(password)'' -AsPlainText -Force)'
##    ParameterOverrides: '-newVMName ''$(vmName)'' -userName ''$(userName)'' -password ''qTv3f9gduUFuc8BQTZUq4MEcFbY3(2H)'' '


#Batch script: %CREATEVM_LABVMID%
#PowerShell script: $env:CREATEVM_LABVMID
#Bash script: $CREATEVM_LABVMID

- script: echo %CREATEVM_LABVMID%



- task: Bash@3
  name: print_environment_variables
  inputs:
    targetType: 'inline'
    script: |
      echo 'env start------------'
      env | sort
      echo 'env stop-------------'


- task: AzurePowerShell@4
  name: get_VM_parameters
  inputs:
    azureSubscription: 'tSQLt CI Subscription(58c04a99-5b92-410c-9e41-10262f68ca80)'
    ScriptType: 'FilePath'
    ScriptPath: 'CI/GetLabVMParams.ps1'
    ScriptArguments: '-labVmId ''$(CREATEVM.LABVMID)'' ' 
    #/subscriptions/58c04a99-5b92-410c-9e41-10262f68ca80/resourceGroups/tSQLtCI_DevTestLab_3_RG/providers/Microsoft.DevTestLab/labs/tSQLtCI_DevTestLab_3/virtualmachines/SQL2014SP3D
    azurePowerShellVersion: 'LatestVersion'


- task: AzureCLI@2
  name: Get_Vm_Status
  inputs:
    azureSubscription: 'tSQLt CI Subscription(58c04a99-5b92-410c-9e41-10262f68ca80)'
    scriptType: 'ps'
    scriptLocation: 'inlineScript'
    inlineScript: 'az vm show -g $env:labVmRgName -n $env:labVmName -d'



### New-NetFirewallRule -DisplayName "Allow WinRM" -Direction Inbound -LocalPort 5986 -Protocol TCP -Action Allow
### New-NetFirewallRule -DisplayName "Allow SQLServer" -Direction Inbound -LocalPort 1433 -Protocol TCP -Action Allow
### SqlCmd -S localhost -E -Q "PRINT @@VERSION;"
### SqlCmd -S localhost -E -Q "CREATE LOGIN tSQLtExternal WITH PASSWORD = 'qTv3f9gduUFuc8BQTZUq4MEcFbY3(2H)',CHECK_EXPIRATION = OFF, CHECK_POLICY = OFF,DEFAULT_DATABASE = tempdb;ALTER SERVER ROLE sysadmin ADD MEMBER tSQLtExternal;"
### SqlCmd -S localhost -E -Q "EXEC xp_instance_regwrite N'HKEY_LOCAL_MACHINE', N'Software\Microsoft\MSSQLServer\MSSQLServer', N'LoginMode', REG_DWORD, 2"
### Restart-Service -Name "SQL Server (MSSQLSERVER)"
### sql2014sp3d.eastus2.cloudapp.azure.com

- task: PowerShellOnTargetMachines@3
  inputs:
    Machines: '$(labVMFqdn)'
    UserName: 'tSQLt'
    UserPassword: 'qTv3f9gduUFuc8BQTZUq4MEcFbY3(2H)'
    InlineScript: |
      # Write your powershell commands here.
      
      Write-Output "Hello World"